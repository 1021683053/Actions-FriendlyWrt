name: packages
on:
  repository_dispatch:
  workflow_dispatch:

jobs:
  prepare_release:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: Get release tag
      id: release_tag
      run: |
        release_tag="FriendlyWrt-packages-$(date +%Y-%m-%d)"
        echo "##[set-output name=release_tag;]$release_tag"

    - name: Create empty release
      id: release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.release_tag.outputs.release_tag }}
        draft: false
        prerelease: false
    outputs:
      release_tag: ${{ steps.release_tag.outputs.release_tag }}
      upload_url: ${{ steps.release.outputs.upload_url }}
  
  build_friendlywrt:
    needs: prepare_release
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    strategy:
      matrix:
        VERSION: [21.02.0, 23.05.0]
      
    steps:
      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d
          wget https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh
          sed -i -e 's/^apt-get -y install openjdk-8-jdk/# apt-get -y install openjdk-8-jdk/g' install.sh
          sed -i -e 's/^\[ -d fa-toolchain \]/# [ -d fa-toolchain ]/g' install.sh
          sed -i -e 's/^(cat fa-toolchain/# (cat fa-toolchain/g' install.sh
          sed -i -e 's/^(tar xf fa-toolchain/# (tar xf fa-toolchain/g' install.sh
          sudo -E bash ./install.sh
          sudo -E update-alternatives --install $(which python) python /usr/bin/python2.7 20
          sudo -E git config --global user.name 'GitHub Actions'
          sudo -E git config --global user.email 'noreply@github.com'
          git clone https://github.com/friendlyarm/repo
          sudo -E cp repo/repo /usr/bin/
          mkdir -p ./artifact
          sudo swapoff -a
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /usr/local/share/boost /opt/ghc
          echo "cores: $(nproc)"
        
      - name: SDK download
        run: |
          # 根据版本去判断下载不同链接的SDK
          # 21.02.0 -> https://downloads.openwrt.org/releases/21.02.0/targets/rockchip/armv8/openwrt-sdk-21.02.0-rockchip-armv8_gcc-8.4.0_musl.Linux-x86_64.tar.xz
          # 23.05.0 -> https://downloads.openwrt.org/releases/23.05.0/targets/rockchip/armv8/openwrt-sdk-23.05.0-rockchip-armv8_gcc-12.3.0_musl.Linux-x86_64.tar.xz
          sdk_url="https://downloads.openwrt.org/releases/${{ matrix.VERSION }}/targets/rockchip/armv8/openwrt-sdk-${{ matrix.VERSION }}-rockchip-armv8_gcc-$(gcc --version | head -n 1 | awk '{print $3}')_musl.Linux-x86_64.tar.xz"
          echo "SDK URL: $sdk_url"